// <auto-generated />
using System;
using GLW.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240613155254_add1")]
    partial class add1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GolfCourse", b =>
                {
                    b.Property<int>("GCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GCId"));

                    b.Property<string>("GCC1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCC2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCC3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCC4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCC5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCName1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCName3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GCNbrHoles")
                        .HasColumnType("int");

                    b.Property<int>("GCParIn")
                        .HasColumnType("int");

                    b.Property<int>("GCParOut")
                        .HasColumnType("int");

                    b.Property<int>("GCParTot")
                        .HasColumnType("int");

                    b.Property<string>("GCPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCT1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GCT1Tot")
                        .HasColumnType("int");

                    b.Property<int>("GCT1TotIn")
                        .HasColumnType("int");

                    b.Property<int>("GCT1TotOut")
                        .HasColumnType("int");

                    b.Property<string>("GCT2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GCT2Tot")
                        .HasColumnType("int");

                    b.Property<int>("GCT2TotIn")
                        .HasColumnType("int");

                    b.Property<int>("GCT2TotOut")
                        .HasColumnType("int");

                    b.Property<string>("GCT3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GCT3Tot")
                        .HasColumnType("int");

                    b.Property<int>("GCT3TotIn")
                        .HasColumnType("int");

                    b.Property<int>("GCT3TotOut")
                        .HasColumnType("int");

                    b.Property<string>("GCT4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GCT4Tot")
                        .HasColumnType("int");

                    b.Property<int>("GCT4TotIn")
                        .HasColumnType("int");

                    b.Property<int>("GCT4TotOut")
                        .HasColumnType("int");

                    b.Property<string>("GCT5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GCT5Tot")
                        .HasColumnType("int");

                    b.Property<int>("GCT5TotIn")
                        .HasColumnType("int");

                    b.Property<int>("GCT5TotOut")
                        .HasColumnType("int");

                    b.Property<string>("GCType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GCZip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GCId");

                    b.ToTable("GolfCourses");

                    b.HasData(
                        new
                        {
                            GCId = 1,
                            GCC1 = "White",
                            GCC2 = "White",
                            GCC3 = "Black",
                            GCC4 = "Black",
                            GCC5 = "White",
                            GCCity = "Lake Worth",
                            GCComments = "Comment number 1",
                            GCName = "Palm Beach National Golf & Country Club",
                            GCName1 = "",
                            GCName2 = "",
                            GCName3 = "",
                            GCNbrHoles = 18,
                            GCParIn = 36,
                            GCParOut = 36,
                            GCParTot = 72,
                            GCPhoneNumber = "(561) 965-3381",
                            GCState = "Fl",
                            GCStreet = "7500 St Andrews Rd",
                            GCT1 = "Black",
                            GCT1Tot = 6734,
                            GCT1TotIn = 3368,
                            GCT1TotOut = 3366,
                            GCT2 = "Blue",
                            GCT2Tot = 6572,
                            GCT2TotIn = 3287,
                            GCT2TotOut = 3285,
                            GCT3 = "White",
                            GCT3Tot = 6138,
                            GCT3TotIn = 3072,
                            GCT3TotOut = 3066,
                            GCT4 = "Gold",
                            GCT4Tot = 5679,
                            GCT4TotIn = 2842,
                            GCT4TotOut = 2837,
                            GCT5 = "Red",
                            GCT5Tot = 5086,
                            GCT5TotIn = 2638,
                            GCT5TotOut = 2448,
                            GCType = "Public",
                            GCZip = "12345"
                        },
                        new
                        {
                            GCId = 3,
                            GCC1 = "White",
                            GCC2 = "Black",
                            GCC3 = "Black",
                            GCC4 = "White",
                            GCC5 = "White",
                            GCCity = "Jamestown",
                            GCComments = "Comment number 2",
                            GCName = "Jamestown Golf Course",
                            GCName1 = "",
                            GCName2 = "",
                            GCName3 = "",
                            GCNbrHoles = 9,
                            GCParIn = 36,
                            GCParOut = 36,
                            GCParTot = 72,
                            GCPhoneNumber = "(401) 423-9930",
                            GCState = "RI",
                            GCStreet = "245 Conanicus Avenue",
                            GCT1 = "Blue",
                            GCT1Tot = 0,
                            GCT1TotIn = 0,
                            GCT1TotOut = 0,
                            GCT2 = "White",
                            GCT2Tot = 0,
                            GCT2TotIn = 0,
                            GCT2TotOut = 0,
                            GCT3 = "Red",
                            GCT3Tot = 0,
                            GCT3TotIn = 0,
                            GCT3TotOut = 0,
                            GCT4 = "White",
                            GCT4Tot = 0,
                            GCT4TotIn = 0,
                            GCT4TotOut = 0,
                            GCT5 = "White",
                            GCT5Tot = 0,
                            GCT5TotIn = 0,
                            GCT5TotOut = 0,
                            GCType = "Public",
                            GCZip = "02835"
                        },
                        new
                        {
                            GCId = 2,
                            GCC1 = "White",
                            GCC2 = "White",
                            GCC3 = "Black",
                            GCC4 = "Black",
                            GCC5 = "White",
                            GCCity = "Boyton Beach",
                            GCComments = "Comment number 2",
                            GCName = "The Links at Boyton Beach",
                            GCName1 = "",
                            GCName2 = "",
                            GCName3 = "",
                            GCNbrHoles = 18,
                            GCParIn = 36,
                            GCParOut = 36,
                            GCParTot = 72,
                            GCPhoneNumber = "(561) 742-6500",
                            GCState = "Fl",
                            GCStreet = "8020 Jog Rd",
                            GCT1 = "Gold",
                            GCT1Tot = 0,
                            GCT1TotIn = 0,
                            GCT1TotOut = 0,
                            GCT2 = "Blue",
                            GCT2Tot = 0,
                            GCT2TotIn = 0,
                            GCT2TotOut = 0,
                            GCT3 = "White",
                            GCT3Tot = 0,
                            GCT3TotIn = 0,
                            GCT3TotOut = 0,
                            GCT4 = "Orange",
                            GCT4Tot = 0,
                            GCT4TotIn = 0,
                            GCT4TotOut = 0,
                            GCT5 = "Red",
                            GCT5Tot = 0,
                            GCT5TotIn = 0,
                            GCT5TotOut = 0,
                            GCType = "Public",
                            GCZip = "12345"
                        },
                        new
                        {
                            GCId = 4,
                            GCC1 = "White",
                            GCC2 = "Black",
                            GCC3 = "Black",
                            GCC4 = "Black",
                            GCC5 = "White",
                            GCCity = "Portsmouth",
                            GCComments = "Comment number 2",
                            GCName = "Green Valley Country Club",
                            GCName1 = "",
                            GCName2 = "",
                            GCName3 = "",
                            GCNbrHoles = 18,
                            GCParIn = 36,
                            GCParOut = 36,
                            GCParTot = 72,
                            GCPhoneNumber = "(401)847-9543",
                            GCState = "RI",
                            GCStreet = "371 Union St",
                            GCT1 = "Blue",
                            GCT1Tot = 0,
                            GCT1TotIn = 0,
                            GCT1TotOut = 0,
                            GCT2 = "White",
                            GCT2Tot = 0,
                            GCT2TotIn = 0,
                            GCT2TotOut = 0,
                            GCT3 = "Yellow",
                            GCT3Tot = 0,
                            GCT3TotIn = 0,
                            GCT3TotOut = 0,
                            GCT4 = "Red",
                            GCT4Tot = 0,
                            GCT4TotIn = 0,
                            GCT4TotOut = 0,
                            GCT5 = "White",
                            GCT5Tot = 0,
                            GCT5TotIn = 0,
                            GCT5TotOut = 0,
                            GCType = "Public",
                            GCZip = "02871"
                        });
                });

            modelBuilder.Entity("GolfCourseHole", b =>
                {
                    b.Property<int>("GHId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GHId"));

                    b.Property<int>("GCId")
                        .HasColumnType("int");

                    b.Property<string>("GCName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GHHandicap")
                        .HasColumnType("int");

                    b.Property<int>("GHHole")
                        .HasColumnType("int");

                    b.Property<int>("GHPar")
                        .HasColumnType("int");

                    b.Property<string>("GHSectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GHT1")
                        .HasColumnType("int");

                    b.Property<int>("GHT2")
                        .HasColumnType("int");

                    b.Property<int>("GHT3")
                        .HasColumnType("int");

                    b.Property<int>("GHT4")
                        .HasColumnType("int");

                    b.Property<int>("GHT5")
                        .HasColumnType("int");

                    b.HasKey("GHId");

                    b.HasIndex("GCId");

                    b.ToTable("GolfCourseHoles");

                    b.HasData(
                        new
                        {
                            GHId = 37,
                            GCId = 3,
                            GCName = "Jamestown Golf Course",
                            GHHandicap = 1,
                            GHHole = 1,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 300,
                            GHT2 = 280,
                            GHT3 = 248,
                            GHT4 = 0,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 38,
                            GCId = 3,
                            GCName = "Jamestown Golf Course",
                            GHHandicap = 3,
                            GHHole = 2,
                            GHPar = 5,
                            GHSectName = "Front",
                            GHT1 = 541,
                            GHT2 = 484,
                            GHT3 = 426,
                            GHT4 = 0,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 39,
                            GCId = 3,
                            GCName = "Jamestown Golf Course",
                            GHHandicap = 17,
                            GHHole = 3,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 293,
                            GHT2 = 279,
                            GHT3 = 240,
                            GHT4 = 0,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 40,
                            GCId = 3,
                            GCName = "Jamestown Golf Course",
                            GHHandicap = 5,
                            GHHole = 4,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 403,
                            GHT2 = 375,
                            GHT3 = 317,
                            GHT4 = 0,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 41,
                            GCId = 3,
                            GCName = "Jamestown Golf Course",
                            GHHandicap = 7,
                            GHHole = 5,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 130,
                            GHT2 = 114,
                            GHT3 = 100,
                            GHT4 = 0,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 42,
                            GCId = 3,
                            GCName = "Jamestown Golf Course",
                            GHHandicap = 11,
                            GHHole = 6,
                            GHPar = 5,
                            GHSectName = "Front",
                            GHT1 = 450,
                            GHT2 = 379,
                            GHT3 = 351,
                            GHT4 = 0,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 43,
                            GCId = 3,
                            GCName = "Jamestown Golf Course",
                            GHHandicap = 15,
                            GHHole = 7,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 161,
                            GHT2 = 141,
                            GHT3 = 130,
                            GHT4 = 0,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 44,
                            GCId = 3,
                            GCName = "Jamestown Golf Course",
                            GHHandicap = 13,
                            GHHole = 8,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 405,
                            GHT2 = 368,
                            GHT3 = 327,
                            GHT4 = 0,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 45,
                            GCId = 3,
                            GCName = "Jamestown Golf Course",
                            GHHandicap = 9,
                            GHHole = 9,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 375,
                            GHT2 = 328,
                            GHT3 = 292,
                            GHT4 = 0,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 65,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 4,
                            GHHole = 1,
                            GHPar = 5,
                            GHSectName = "Front",
                            GHT1 = 509,
                            GHT2 = 500,
                            GHT3 = 451,
                            GHT4 = 439,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 66,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 18,
                            GHHole = 2,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 156,
                            GHT2 = 140,
                            GHT3 = 139,
                            GHT4 = 123,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 67,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 2,
                            GHHole = 3,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 431,
                            GHT2 = 399,
                            GHT3 = 388,
                            GHT4 = 373,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 68,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 8,
                            GHHole = 4,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 420,
                            GHT2 = 389,
                            GHT3 = 330,
                            GHT4 = 302,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 69,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 10,
                            GHHole = 5,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 388,
                            GHT2 = 338,
                            GHT3 = 255,
                            GHT4 = 250,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 70,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 12,
                            GHHole = 6,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 358,
                            GHT2 = 340,
                            GHT3 = 266,
                            GHT4 = 240,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 71,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 16,
                            GHHole = 7,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 186,
                            GHT2 = 145,
                            GHT3 = 86,
                            GHT4 = 80,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 72,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 6,
                            GHHole = 8,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 307,
                            GHT2 = 298,
                            GHT3 = 258,
                            GHT4 = 250,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 73,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 14,
                            GHHole = 9,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 324,
                            GHT2 = 313,
                            GHT3 = 296,
                            GHT4 = 289,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 74,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 11,
                            GHHole = 10,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 368,
                            GHT2 = 340,
                            GHT3 = 326,
                            GHT4 = 294,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 75,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 1,
                            GHHole = 11,
                            GHPar = 5,
                            GHSectName = "Front",
                            GHT1 = 515,
                            GHT2 = 478,
                            GHT3 = 455,
                            GHT4 = 391,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 76,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 3,
                            GHHole = 12,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 395,
                            GHT2 = 374,
                            GHT3 = 308,
                            GHT4 = 302,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 77,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 13,
                            GHHole = 13,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 353,
                            GHT2 = 336,
                            GHT3 = 321,
                            GHT4 = 316,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 78,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 9,
                            GHHole = 14,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 329,
                            GHT2 = 309,
                            GHT3 = 226,
                            GHT4 = 216,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 79,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 15,
                            GHHole = 15,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 179,
                            GHT2 = 159,
                            GHT3 = 102,
                            GHT4 = 96,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 80,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 5,
                            GHHole = 16,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 386,
                            GHT2 = 369,
                            GHT3 = 300,
                            GHT4 = 292,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 81,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 17,
                            GHHole = 17,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 178,
                            GHT2 = 158,
                            GHT3 = 127,
                            GHT4 = 80,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 82,
                            GCId = 2,
                            GCName = "The Links at Boyton Beach",
                            GHHandicap = 7,
                            GHHole = 18,
                            GHPar = 5,
                            GHSectName = "Front",
                            GHT1 = 515,
                            GHT2 = 493,
                            GHT3 = 475,
                            GHT4 = 398,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 46,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 7,
                            GHHole = 1,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 370,
                            GHT2 = 361,
                            GHT3 = 345,
                            GHT4 = 331,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 47,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 1,
                            GHHole = 2,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 461,
                            GHT2 = 454,
                            GHT3 = 420,
                            GHT4 = 341,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 48,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 13,
                            GHHole = 3,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 397,
                            GHT2 = 386,
                            GHT3 = 355,
                            GHT4 = 329,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 49,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 3,
                            GHHole = 4,
                            GHPar = 5,
                            GHSectName = "Front",
                            GHT1 = 550,
                            GHT2 = 541,
                            GHT3 = 514,
                            GHT4 = 474,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 50,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 11,
                            GHHole = 5,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 190,
                            GHT2 = 175,
                            GHT3 = 132,
                            GHT4 = 125,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 51,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 9,
                            GHHole = 6,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 404,
                            GHT2 = 392,
                            GHT3 = 358,
                            GHT4 = 354,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 52,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 17,
                            GHHole = 7,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 360,
                            GHT2 = 354,
                            GHT3 = 335,
                            GHT4 = 314,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 53,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 15,
                            GHHole = 8,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 210,
                            GHT2 = 201,
                            GHT3 = 155,
                            GHT4 = 145,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 54,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 5,
                            GHHole = 9,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 433,
                            GHT2 = 424,
                            GHT3 = 375,
                            GHT4 = 361,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 55,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 2,
                            GHHole = 10,
                            GHPar = 5,
                            GHSectName = "Back",
                            GHT1 = 613,
                            GHT2 = 605,
                            GHT3 = 576,
                            GHT4 = 466,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 56,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 16,
                            GHHole = 11,
                            GHPar = 3,
                            GHSectName = "Back",
                            GHT1 = 229,
                            GHT2 = 220,
                            GHT3 = 187,
                            GHT4 = 134,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 57,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 18,
                            GHHole = 12,
                            GHPar = 3,
                            GHSectName = "Back",
                            GHT1 = 147,
                            GHT2 = 125,
                            GHT3 = 107,
                            GHT4 = 101,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 58,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 10,
                            GHHole = 13,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 342,
                            GHT2 = 327,
                            GHT3 = 304,
                            GHT4 = 252,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 59,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 6,
                            GHHole = 14,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 451,
                            GHT2 = 440,
                            GHT3 = 414,
                            GHT4 = 330,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 60,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 9,
                            GHHole = 15,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 340,
                            GHT2 = 334,
                            GHT3 = 304,
                            GHT4 = 290,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 61,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 4,
                            GHHole = 16,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 407,
                            GHT2 = 394,
                            GHT3 = 360,
                            GHT4 = 336,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 63,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 14,
                            GHHole = 17,
                            GHPar = 5,
                            GHSectName = "Back",
                            GHT1 = 548,
                            GHT2 = 540,
                            GHT3 = 515,
                            GHT4 = 449,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 64,
                            GCId = 4,
                            GCName = "Green Valley Country Club",
                            GHHandicap = 8,
                            GHHole = 18,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 378,
                            GHT2 = 368,
                            GHT3 = 335,
                            GHT4 = 313,
                            GHT5 = 0
                        },
                        new
                        {
                            GHId = 1,
                            GCId = 1,
                            GCName = "Palm Beach National Golf & Country Club",
                            GHHandicap = 1,
                            GHHole = 1,
                            GHPar = 5,
                            GHSectName = "Front",
                            GHT1 = 509,
                            GHT2 = 504,
                            GHT3 = 483,
                            GHT4 = 405,
                            GHT5 = 393
                        },
                        new
                        {
                            GHId = 2,
                            GCId = 1,
                            GCName = "Palm Beach National Golf & Country Club",
                            GHHandicap = 3,
                            GHHole = 2,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 390,
                            GHT2 = 378,
                            GHT3 = 349,
                            GHT4 = 327,
                            GHT5 = 290
                        },
                        new
                        {
                            GHId = 3,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 17,
                            GHHole = 3,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 165,
                            GHT2 = 158,
                            GHT3 = 141,
                            GHT4 = 130,
                            GHT5 = 93
                        },
                        new
                        {
                            GHId = 4,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 5,
                            GHHole = 4,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 407,
                            GHT2 = 395,
                            GHT3 = 352,
                            GHT4 = 317,
                            GHT5 = 272
                        },
                        new
                        {
                            GHId = 5,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 7,
                            GHHole = 5,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 426,
                            GHT2 = 411,
                            GHT3 = 384,
                            GHT4 = 369,
                            GHT5 = 300
                        },
                        new
                        {
                            GHId = 6,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 11,
                            GHHole = 6,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 414,
                            GHT2 = 412,
                            GHT3 = 398,
                            GHT4 = 383,
                            GHT5 = 277
                        },
                        new
                        {
                            GHId = 7,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 15,
                            GHHole = 7,
                            GHPar = 5,
                            GHSectName = "Front",
                            GHT1 = 505,
                            GHT2 = 492,
                            GHT3 = 465,
                            GHT4 = 452,
                            GHT5 = 425
                        },
                        new
                        {
                            GHId = 8,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 13,
                            GHHole = 8,
                            GHPar = 3,
                            GHSectName = "Front",
                            GHT1 = 179,
                            GHT2 = 174,
                            GHT3 = 155,
                            GHT4 = 143,
                            GHT5 = 119
                        },
                        new
                        {
                            GHId = 9,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 9,
                            GHHole = 9,
                            GHPar = 4,
                            GHSectName = "Front",
                            GHT1 = 371,
                            GHT2 = 361,
                            GHT3 = 339,
                            GHT4 = 311,
                            GHT5 = 279
                        },
                        new
                        {
                            GHId = 10,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 10,
                            GHHole = 10,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 418,
                            GHT2 = 404,
                            GHT3 = 370,
                            GHT4 = 344,
                            GHT5 = 318
                        },
                        new
                        {
                            GHId = 11,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 16,
                            GHHole = 11,
                            GHPar = 3,
                            GHSectName = "Back",
                            GHT1 = 160,
                            GHT2 = 154,
                            GHT3 = 145,
                            GHT4 = 135,
                            GHT5 = 130
                        },
                        new
                        {
                            GHId = 12,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 12,
                            GHHole = 12,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 360,
                            GHT2 = 361,
                            GHT3 = 348,
                            GHT4 = 324,
                            GHT5 = 299
                        },
                        new
                        {
                            GHId = 13,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 2,
                            GHHole = 13,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 420,
                            GHT2 = 413,
                            GHT3 = 385,
                            GHT4 = 345,
                            GHT5 = 329
                        },
                        new
                        {
                            GHId = 14,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 14,
                            GHHole = 14,
                            GHPar = 5,
                            GHSectName = "Back",
                            GHT1 = 509,
                            GHT2 = 501,
                            GHT3 = 472,
                            GHT4 = 415,
                            GHT5 = 400
                        },
                        new
                        {
                            GHId = 15,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 8,
                            GHHole = 15,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 390,
                            GHT2 = 378,
                            GHT3 = 356,
                            GHT4 = 333,
                            GHT5 = 318
                        },
                        new
                        {
                            GHId = 16,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 18,
                            GHHole = 16,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 397,
                            GHT2 = 384,
                            GHT3 = 353,
                            GHT4 = 329,
                            GHT5 = 262
                        },
                        new
                        {
                            GHId = 17,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 4,
                            GHHole = 17,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 356,
                            GHT2 = 349,
                            GHT3 = 332,
                            GHT4 = 318,
                            GHT5 = 302
                        },
                        new
                        {
                            GHId = 18,
                            GCId = 1,
                            GCName = "Palm Beach Natioanl Golf & Country Club",
                            GHHandicap = 6,
                            GHHole = 18,
                            GHPar = 4,
                            GHSectName = "Back",
                            GHT1 = 358,
                            GHT2 = 343,
                            GHT3 = 311,
                            GHT4 = 299,
                            GHT5 = 280
                        });
                });

            modelBuilder.Entity("GolfPlayer", b =>
                {
                    b.Property<int>("GPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GPId"));

                    b.Property<int>("FTot1")
                        .HasColumnType("int");

                    b.Property<int>("FTot2")
                        .HasColumnType("int");

                    b.Property<int>("FTot3")
                        .HasColumnType("int");

                    b.Property<int>("GGId")
                        .HasColumnType("int");

                    b.Property<string>("GPFName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPLName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GTot1")
                        .HasColumnType("int");

                    b.Property<int>("GTot2")
                        .HasColumnType("int");

                    b.Property<int>("GTot3")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("PTot1")
                        .HasColumnType("int");

                    b.Property<int>("PTot2")
                        .HasColumnType("int");

                    b.Property<int>("PTot3")
                        .HasColumnType("int");

                    b.Property<int>("Tot1")
                        .HasColumnType("int");

                    b.Property<int>("Tot2")
                        .HasColumnType("int");

                    b.Property<int>("Tot3")
                        .HasColumnType("int");

                    b.HasKey("GPId");

                    b.HasIndex("GGId");

                    b.HasIndex("MemberId");

                    b.ToTable("GolfPlayers");

                    b.HasData(
                        new
                        {
                            GPId = 1,
                            FTot1 = 0,
                            FTot2 = 0,
                            FTot3 = 0,
                            GGId = 1,
                            GPFName = "William",
                            GPLName = "Dunn",
                            GPType = "Member",
                            GTot1 = 0,
                            GTot2 = 0,
                            GTot3 = 0,
                            MemberId = 1,
                            PTot1 = 0,
                            PTot2 = 0,
                            PTot3 = 0,
                            Tot1 = 0,
                            Tot2 = 0,
                            Tot3 = 0
                        });
                });

            modelBuilder.Entity("GolfPlayerScore", b =>
                {
                    b.Property<int>("GPSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GPSId"));

                    b.Property<int>("GHId")
                        .HasColumnType("int");

                    b.Property<int>("GPId")
                        .HasColumnType("int");

                    b.Property<string>("GPSFW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPSGIY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GPSPutts")
                        .HasColumnType("int");

                    b.Property<int>("GPSStrokes")
                        .HasColumnType("int");

                    b.HasKey("GPSId");

                    b.HasIndex("GHId");

                    b.ToTable("GolfPlayerScores");

                    b.HasData(
                        new
                        {
                            GPSId = 1,
                            GHId = 1,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 2,
                            GHId = 2,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 3,
                            GHId = 3,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 4,
                            GHId = 4,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 5,
                            GHId = 5,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 6,
                            GHId = 6,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 7,
                            GHId = 7,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 8,
                            GHId = 8,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 9,
                            GHId = 9,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 10,
                            GHId = 10,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 11,
                            GHId = 11,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 12,
                            GHId = 12,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 13,
                            GHId = 13,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 14,
                            GHId = 14,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 15,
                            GHId = 15,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 16,
                            GHId = 16,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 17,
                            GHId = 17,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        },
                        new
                        {
                            GPSId = 18,
                            GHId = 18,
                            GPId = 1,
                            GPSFW = "Yes",
                            GPSGIY = "Yes",
                            GPSPutts = 2,
                            GPSStrokes = 4
                        });
                });

            modelBuilder.Entity("Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Handicap")
                        .HasColumnType("int");

                    b.Property<int>("LId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPlan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberTee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredNotification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Registered")
                        .HasColumnType("bit");

                    b.HasKey("MemberId");

                    b.HasIndex("LId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            Email = "willffdunn@gmail.com",
                            FirstName = "William",
                            FullName = "William Dunn",
                            Handicap = 9,
                            LId = 1,
                            LastName = "Dunn",
                            MemberPlan = "Admin",
                            MemberStatus = "Active",
                            MemberTee = "White",
                            MemberType = "Golfer",
                            PhoneNumber = "484-885-7000",
                            PreferredNotification = "Both",
                            Registered = false
                        },
                        new
                        {
                            MemberId = 2,
                            Email = "karenfdunn@gmail.com",
                            FirstName = "Karen",
                            FullName = "Karen Dunn",
                            Handicap = 19,
                            LId = 1,
                            LastName = "Dunn",
                            MemberPlan = "Admin",
                            MemberStatus = "Active",
                            MemberTee = "Red",
                            MemberType = "Social",
                            PhoneNumber = "610-733-38380",
                            PreferredNotification = "Both",
                            Registered = false
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Models.Event", b =>
                {
                    b.Property<int>("EvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvId"));

                    b.Property<string>("EvContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvContactFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvContactLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvContactPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EvDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EvDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EvEndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EvEndTime")
                        .HasColumnType("time");

                    b.Property<string>("EvFeeAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvRegComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EvRegEndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EvRegEndTime")
                        .HasColumnType("time");

                    b.Property<string>("EvRegMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EvRegStartDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EvRegStartTime")
                        .HasColumnType("time");

                    b.Property<string>("EvShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EvTime")
                        .HasColumnType("time");

                    b.Property<string>("EvType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LId")
                        .HasColumnType("int");

                    b.HasKey("EvId");

                    b.HasIndex("LId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EvId = 1,
                            EvContactEmail = "willffdunn@tropicbaygolf.com",
                            EvContactFName = "Bill",
                            EvContactLName = "Dunn",
                            EvContactPhoneNumber = "(999)999-9999",
                            EvDate = new DateTime(2023, 12, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            EvDescription = "First Event",
                            EvEndDate = new DateTime(2023, 12, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            EvEndTime = new TimeSpan(0, 12, 0, 0, 0),
                            EvFeeAmount = "75.00",
                            EvLocation = "TB Club House",
                            EvRegComment = "Fee is per person and can be paid by check to TB Golf Club",
                            EvRegEndDate = new DateTime(2023, 12, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            EvRegEndTime = new TimeSpan(0, 12, 0, 0, 0),
                            EvRegMethod = "Online",
                            EvRegStartDate = new DateTime(2023, 12, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            EvRegStartTime = new TimeSpan(0, 8, 0, 0, 0),
                            EvShortDescription = "First Event",
                            EvTime = new TimeSpan(0, 8, 0, 0, 0),
                            EvType = "Golf Round",
                            LId = 1
                        });
                });

            modelBuilder.Entity("Models.EventParticipant", b =>
                {
                    b.Property<int>("EPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EPId"));

                    b.Property<string>("EPEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EvId")
                        .HasColumnType("int");

                    b.Property<int>("LId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("EPId");

                    b.HasIndex("EvId");

                    b.ToTable("EvParticipants");

                    b.HasData(
                        new
                        {
                            EPId = 1,
                            EPEmail = "willffdunn@tropicbaygolf.com",
                            EPFName = "Bill",
                            EPLName = "Dunn",
                            EPPhoneNumber = "(999)999-9999",
                            EPType = "Sponsor",
                            EvId = 1,
                            LId = 0,
                            MemberId = 1
                        });
                });

            modelBuilder.Entity("Models.GolfGroup", b =>
                {
                    b.Property<int>("GGId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GGId"));

                    b.Property<string>("GGName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("GGTtime")
                        .HasColumnType("time");

                    b.Property<int>("GRId")
                        .HasColumnType("int");

                    b.HasKey("GGId");

                    b.HasIndex("GRId");

                    b.ToTable("GolfGroups");

                    b.HasData(
                        new
                        {
                            GGId = 1,
                            GGName = "Group 1",
                            GGTtime = new TimeSpan(0, 6, 54, 0, 0),
                            GRId = 1
                        });
                });

            modelBuilder.Entity("Models.GolfRound", b =>
                {
                    b.Property<int>("GRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRId"));

                    b.Property<int>("GCId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GRType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LId")
                        .HasColumnType("int");

                    b.HasKey("GRId");

                    b.HasIndex("GCId");

                    b.HasIndex("LId");

                    b.ToTable("GolfRounds");

                    b.HasData(
                        new
                        {
                            GRId = 1,
                            GCId = 1,
                            GRDate = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GRType = "GLW Club, Stroke Play",
                            LId = 1
                        });
                });

            modelBuilder.Entity("Models.League", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LId"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LContactFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LContactLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LContactPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LSeasonEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LSeasonStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("LState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LZip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LId");

                    b.ToTable("Leagues");

                    b.HasData(
                        new
                        {
                            LId = 1,
                            ConfirmPassword = "Kahida01!",
                            LCity = "Delray Beach",
                            LContactEmail = "willffdunn@gmail.com",
                            LContactFName = "Bill",
                            LContactLName = "Dunn",
                            LContactPhoneNumber = "484.885.7000",
                            LDescription = "The Tropic Bay Golf League is a a golf league comprised primarily of golf enthusuiasts of all skill ranges primarily from the TRpoic Bay Condominium community",
                            LSeasonEnd = new DateTime(2024, 4, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LSeasonStart = new DateTime(2023, 11, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            LState = "Fl",
                            LStreet = "2801 Florida Blvd",
                            LZip = "33483",
                            LeagueName = "Tropic Bay Golf",
                            Password = "Kahida01!"
                        });
                });

            modelBuilder.Entity("Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("GolfCourseHole", b =>
                {
                    b.HasOne("GolfCourse", "GolfCourse")
                        .WithMany()
                        .HasForeignKey("GCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GolfCourse");
                });

            modelBuilder.Entity("GolfPlayer", b =>
                {
                    b.HasOne("Models.GolfGroup", "GolfGroup")
                        .WithMany()
                        .HasForeignKey("GGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GolfGroup");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GolfPlayerScore", b =>
                {
                    b.HasOne("GolfCourseHole", "GolfCourseHole")
                        .WithMany()
                        .HasForeignKey("GHId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GolfCourseHole");
                });

            modelBuilder.Entity("Member", b =>
                {
                    b.HasOne("Models.League", "League")
                        .WithMany()
                        .HasForeignKey("LId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Event", b =>
                {
                    b.HasOne("Models.League", "League")
                        .WithMany()
                        .HasForeignKey("LId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");
                });

            modelBuilder.Entity("Models.EventParticipant", b =>
                {
                    b.HasOne("Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Models.GolfGroup", b =>
                {
                    b.HasOne("Models.GolfRound", "GolfRound")
                        .WithMany()
                        .HasForeignKey("GRId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GolfRound");
                });

            modelBuilder.Entity("Models.GolfRound", b =>
                {
                    b.HasOne("GolfCourse", "GolfCourse")
                        .WithMany()
                        .HasForeignKey("GCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.League", "League")
                        .WithMany()
                        .HasForeignKey("LId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GolfCourse");

                    b.Navigation("League");
                });
#pragma warning restore 612, 618
        }
    }
}
