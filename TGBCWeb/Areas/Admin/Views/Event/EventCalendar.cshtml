@using Models;
@model List<EventCalVM>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<partial name="pvNotification" />
<div class="col=2" style="text-align: right">
    <a asp asp-controller="Event" asp-action="Index" class="btn btn-primary" >
        Back to List
    </a>
</div>

    <!-- Start your project here-->
<div class="container" style="margin-top: 150px">

    <div class="d-flex justify-content-center align-items-center" style="height: 60vh" >
        <div class="calendar" id="calendar" data-mdb-calendar-init data-mdb-tooltips="false"
             data-mdb-view-select="false" data-mdb-add-event-button="false"  />
         </div>
    </div>

  <!-- End your project here-->



<!-- Add this code after the calendar initialization -->


  

<!-- MDB ESSENTIAL -->
<script type="text/javascript" src="~/mdb/calendar/js/mdb.umd.min.js"></script>
<!-- MDB PLUGINS -->
<script type="text/javascript" src="~/mdb/calendar/plugins/js/calendar.min.js"></script>
<!-- Custom scripts -->
<script type="text/javascript">

    $('.event').on('click', () => { alert('click') });

    const events = [];

    @for (var i = 0; i < Model.Count; i++)
    {
        <text>
            events.push({
                summary: '@Model[i].EvShortDescription',
                description: 'www.google.com',
                start: {
                    date: Calendar.dayjs('@Model[i].EvStartDate').format('DD/MM/YYYY'),
                },
                end: {
                    date: Calendar.dayjs('@Model[i].EvEndDate').format('DD/MM/YYYY'),
                },
                color: {
                    background: '#cfe0fc',
                    foreground: '#0a47a9',
                }
            });
        </text>
    }



    const calendarElement = document.getElementById('calendar');
    const calendarInstance = Calendar.getInstance(calendarElement);
    calendarInstance.addEvents(events);
</script>


